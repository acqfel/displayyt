{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/all-videos/all-videos.component.html","webpack:///./src/app/all-videos/all-videos.component.scss","webpack:///./src/app/all-videos/all-videos.component.ts","webpack:///./src/app/app-routing/app-routing.module.ts","webpack:///./src/app/app-routing/routes.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/featured/featured.component.html","webpack:///./src/app/featured/featured.component.scss","webpack:///./src/app/featured/featured.component.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.scss","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/search/search.component.html","webpack:///./src/app/search/search.component.scss","webpack:///./src/app/search/search.component.ts","webpack:///./src/app/services/list-video.service.ts","webpack:///./src/app/services/search.service.ts","webpack:///./src/app/video-modal/video-modal.component.html","webpack:///./src/app/video-modal/video-modal.component.scss","webpack:///./src/app/video-modal/video-modal.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"container\\\" fxFlex>\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"150px\\\" *ngIf=\\\"listResults\\\" fxFlex>\\n    <mat-grid-tile *ngFor=\\\"let item of listResults.items\\\" fxLayout=\\\"column\\\">\\n      <div fxFlex=\\\"40\\\">\\n        <img matListAvatar class=\\\"thumb\\\" \\n            src={{item.snippet.thumbnails.default.url}} \\n            alt={{item.snippet.title}}>\\n      </div>\\n      <div fxFlex=\\\"60\\\">\\n        <h4 class=\\\"text3p\\\">{{item.snippet.title}}</h4>\\n        <p>X views</p>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  <div [hidden]=\\\"listResults\\\" fxFlex=\\\"100%\\\">\\n    <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n  </div>\\n</div>\\n\"","module.exports = \".thumb {\\n  width: 120px !important;\\n  height: 90px !important;\\n  border-radius: 0 !important; }\\n\\n.text3p {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ListVideo, Item } from '../interfaces/list-video';\nimport { ListVideoService } from '../services/list-video.service';\n\n@Component({\n  selector: 'app-all-videos',\n  templateUrl: './all-videos.component.html',\n  styleUrls: ['./all-videos.component.scss']\n})\nexport class AllVideosComponent implements OnInit {\n\n  listResults: ListVideo;\n\n  constructor(private ListVideoService: ListVideoService) { }\n\n  ngOnInit() {\n    this.listVideo();\n  }\n  \n  listVideo = () => {\n    this.ListVideoService.listVideo().subscribe( (response) => {\n      this.listResults = response;\n      console.log(this.listResults);\n    }, (error) => {\n      alert(\"Error: \" + error.statusText);\n    })\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { routes } from './routes';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports: [RouterModule],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","import { Routes } from '@angular/router';\n\nimport { AllVideosComponent } from '../all-videos/all-videos.component';\nimport { FeaturedComponent } from '../featured/featured.component';\nimport { SearchComponent } from '../search/search.component';\n\nexport const routes: Routes = [\n  { path: 'featured',      component: FeaturedComponent },\n  { path: 'all-videos',    component: AllVideosComponent },\n  { path: 'search',        component: SearchComponent, data: { title: 'Youtube Search' } },\n  { path: 'search/:query', component: SearchComponent, data: { title: 'Youtube Search' } },\n  { path: '', redirectTo: '/featured', pathMatch: 'full' }\n];","module.exports = \"<app-header></app-header>\\n<router-outlet></router-outlet>\\n\"","module.exports = \"\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatListModule } from '@angular/material/list';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport 'hammerjs';\nimport { AppComponent } from './app.component';\nimport { FeaturedComponent } from './featured/featured.component';\nimport { ListVideoService } from './services/list-video.service';\nimport { SearchService } from './services/search.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HeaderComponent } from './header/header.component';\nimport { SearchComponent } from './search/search.component';\nimport { AllVideosComponent } from './all-videos/all-videos.component';\nimport { AppRoutingModule } from './app-routing/app-routing.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { VideoModalComponent } from './video-modal/video-modal.component';\nimport { registerLocaleData } from '@angular/common';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FeaturedComponent,\n    HeaderComponent,\n    SearchComponent,\n    AllVideosComponent,\n    VideoModalComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    FlexLayoutModule,\n    AppRoutingModule,\n    FormsModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatMenuModule,\n    MatIconModule,\n    MatGridListModule,\n    MatCardModule,\n    MatListModule,\n    MatProgressSpinnerModule,\n    MatInputModule,\n    MatDialogModule,\n    MatTooltipModule\n  ],\n  providers: [ListVideoService, SearchService],\n  entryComponents: [VideoModalComponent],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"container\\\" fxLayout=\\\"row\\\" fxLayout.xs=\\\"column\\\" fxLayout.sm=\\\"column\\\"\\n     fxLayoutAlign.gt-md=\\\"space-around center\\\"\\n     fxLayoutGap=\\\"10px\\\">\\n  \\n  <mat-card class=\\\"tiltil\\\" fxFlex=\\\"60%\\\" *ngIf=\\\"featuredVideo\\\">\\n      <mat-card-header>\\n          <mat-card-title><h2>Vídeo em destaque</h2></mat-card-title>\\n      </mat-card-header>\\n      <!--<img mat-card-image [src]=\\\"featuredVideo.snippet.thumbnails.default.url\\\" alt=\\\"vídeo\\\">-->\\n      <mat-card-content>\\n        <div fxLayoutAlign=\\\"center center\\\">\\n          <iframe id=\\\"ytplayer\\\" type=\\\"text/html\\\" width=\\\"480\\\" height=\\\"270\\\"\\n          [src]=\\\"srcYoutube\\\" frameborder=\\\"0\\\"></iframe>\\n        </div>\\n        <mat-card class=\\\"tiltil\\\">\\n          <mat-card-title-group>\\n            <mat-card-title>{{featuredVideo.snippet.title}}</mat-card-title>\\n            <mat-icon>visibility</mat-icon>\\n            <mat-icon matTooltipPosition=\\\"above\\\"\\n                      matTooltip=\\\"{{featuredVideo.snippet.publishedAt | date:'dd MMMM yyyy' }}\\\"\\n                      >access_time</mat-icon>\\n          </mat-card-title-group>\\n          <mat-card-content>\\n            <p>{{featuredVideo.snippet.description}}</p>  \\n          </mat-card-content>\\n        </mat-card>\\n          \\n      </mat-card-content>\\n  </mat-card>\\n  <div [hidden]=\\\"featuredVideo\\\" fxFlex=\\\"60%\\\">\\n    <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n  </div>\\n  \\n  <mat-card class=\\\"over-auto tiltil\\\" fxFlex=\\\"40%\\\" *ngIf=\\\"listResults\\\">\\n    <mat-card-header>\\n      <mat-card-title><h2>+ Vídeos</h2></mat-card-title>\\n    </mat-card-header>\\n    <mat-card-content>\\n     <mat-list class=\\\"tiltil\\\">\\n        <mat-list-item *ngFor=\\\"let item of listResults.items\\\" (click) = \\\"onSelect(item)\\\">\\n          <img matListAvatar class=\\\"thumb\\\" src={{item.snippet.thumbnails.default.url}} alt={{item.snippet.title}}>\\n          <h2 matLine>{{item.snippet.title}}</h2>\\n          <p matLine fxLayoutAlign=\\\"start center\\\"><mat-icon>visibility</mat-icon> views</p>\\n        </mat-list-item>\\n      </mat-list>\\n    </mat-card-content>\\n  </mat-card>\\n  <div [hidden]=\\\"listResults\\\" fxFlex=\\\"40%\\\">\\n    <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n  </div>\\n  \\n</div>\\n\"","module.exports = \".thumb {\\n  width: 120px !important;\\n  height: 90px !important;\\n  border-radius: 0 !important; }\\n\\n.over-auto {\\n  max-height: 550px;\\n  overflow: auto; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { ListVideo, Item } from '../interfaces/list-video';\nimport { ListVideoService } from '../services/list-video.service';\n\n@Component({\n  selector: 'app-featured',\n  templateUrl: './featured.component.html',\n  styleUrls: ['./featured.component.scss']\n})\n\nexport class FeaturedComponent implements OnInit {\n  \n  origin: string = 'https://ang4-projects-felipe007.c9users.io/featured';\n  \n  listResults: ListVideo;\n  featuredVideo: Item;\n  srcYoutube: SafeUrl;\n\n  constructor(private ListVideoService: ListVideoService,\n              private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    this.listVideo();\n  }\n\n  listVideo = () => {\n    this.ListVideoService.listVideo().subscribe( (response) => {\n      let videoId = '';\n      let preURL = '';\n      this.listResults = response;\n      console.log(this.listResults);\n      this.featuredVideo = this.listResults.items[0];\n      videoId = this.featuredVideo.contentDetails.videoId;\n      preURL = 'https://www.youtube.com/embed/'+videoId\n                        +'?autoplay=1&origin='+this.origin;\n      this.srcYoutube = this.sanitizer.bypassSecurityTrustResourceUrl(preURL);\n                        \n      console.log(this.featuredVideo);\n      //console.log(\"url yt: \"+this.srcYoutube);\n    }, (error) => {\n      alert(\"Error: \" + error.statusText);\n    })\n  }\n  \n  onSelect(item: Item){\n    let videoId = '';\n    let preURL = '';\n    \n    this.featuredVideo = item;\n    videoId = this.featuredVideo.contentDetails.videoId;\n    preURL = 'https://www.youtube.com/embed/'+videoId\n                      +'?autoplay=1&origin='+this.origin;\n    this.srcYoutube = this.sanitizer.bypassSecurityTrustResourceUrl(preURL);\n  }\n\n}\n","module.exports = \"<div fxLayout=\\\"row\\\">\\n  <mat-toolbar class=\\\"bg-wine tiltil\\\" color=\\\"primary\\\">\\n    <span fxFlex fxLayoutAlign=\\\"start center\\\">Fictícia Vídeos</span>\\n    \\n    <form>\\n      <mat-form-field>\\n        <input matInput name=\\\"query\\\" type=\\\"search\\\" placeholder=\\\"\\\" [(ngModel)]=\\\"searchQuery\\\" (keyup.enter)=\\\"sendQuery()\\\">\\n        <mat-icon class=\\\"size-icon\\\" matSuffix>search</mat-icon>\\n      </mat-form-field>\\n    </form>\\n    \\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\" fxflex fxLayoutAlign=\\\"end center\\\">\\n        <span>Menu </span>\\n        <mat-icon>menu</mat-icon>\\n    </button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n      <a mat-menu-item routerLink=\\\"/featured\\\">Destaques</a>\\n      <a mat-menu-item routerLink=\\\"/all-videos\\\">Vídeos</a>\\n    </mat-menu>\\n  \\n  </mat-toolbar>\\n</div>\\n\"","module.exports = \".bg-wine {\\n  background-color: #A7395C; }\\n\\n.size-icon {\\n  font-size: 125% !important; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Search, Item } from '../interfaces/search';\nimport { SearchService } from '../services/search.service';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  searchResults: Search;\n  searchQuery: string;\n  displayQuery: string;\n  \n  title: string;\n\n  constructor(private SearchService: SearchService, \n              private route: ActivatedRoute,\n              private router: Router) { }\n\n  ngOnInit() {\n    \n  }\n  \n  searchVideos = () => {\n    \n    this.route.paramMap.subscribe( (params: ParamMap) => {\n      this.searchQuery = params.get('query');\n      this.displayQuery = params.get('query');\n      \n      \n      console.log(\"query: \"+this.searchQuery);\n      this.SearchService.searchVideos(this.searchQuery).subscribe( (response) => {\n        this.searchResults = response;\n        console.log(this.searchResults);\n      }, (error) => {\n        alert(\"Error: \" + error.statusText);\n      }); \n      \n    });\n    \n    this.route.data.subscribe( (result) => {\n      this.title = result.title;\n      console.log(\"title query: \"+this.title);\n    });\n  }\n  \n  sendQuery = () => {\n    this.searchResults = null;\n    this.router.navigate(['/search/' + this.searchQuery]);\n  }\n\n}\n","module.exports = \"<div class=\\\"container\\\" fxLayout=\\\"row\\\">\\n  <h3>Resultados para: \\\"{{displayQuery}}\\\"</h3>\\n</div>\\n<div class=\\\"container\\\" fxLayout=\\\"row\\\">\\n  <mat-grid-list cols=\\\"3\\\" rowHeight=\\\"150px\\\" *ngIf=\\\"searchResults\\\" fxFlex>\\n    <mat-grid-tile *ngFor=\\\"let item of searchResults.items\\\" \\n                   fxLayout=\\\"column\\\" (click)=\\\"openLoginForm(item)\\\">\\n      <div fxFlex=\\\"40\\\">\\n        <img matListAvatar class=\\\"thumb\\\"\\n            src={{item.snippet.thumbnails.default.url}} \\n            alt={{item.snippet.title}}>\\n      </div>\\n      <div fxFlex=\\\"60\\\">\\n        <h4 class=\\\"text3p\\\">{{item.snippet.title}}</h4>\\n        <p fxLayoutAlign=\\\"start center\\\"><mat-icon>visibility</mat-icon> views</p>\\n      </div>\\n    </mat-grid-tile>\\n  </mat-grid-list>\\n  <div [hidden]=\\\"searchResults\\\" fxFlex=\\\"100%\\\">\\n    <mat-spinner></mat-spinner><h4>Loading . . . Please Wait</h4>\\n  </div>\\n</div>\"","module.exports = \".thumb {\\n  width: 120px !important;\\n  height: 90px !important;\\n  border-radius: 0 !important; }\\n\\n.text3p {\\n  white-space: nowrap;\\n  overflow: hidden;\\n  text-overflow: ellipsis; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\nimport { Search, Item } from '../interfaces/search';\nimport { SearchService } from '../services/search.service';\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\nimport { MatDialog, MatDialogRef } from '@angular/material';\nimport { VideoModalComponent } from '../video-modal/video-modal.component';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  searchResults: Search;\n  searchQuery: string;\n  displayQuery: string;\n  \n  title: string;\n\n  constructor(private SearchService: SearchService, \n              private route: ActivatedRoute,\n              private router: Router,\n              public dialog: MatDialog) { }\n\n  ngOnInit() {\n    //this.searchQuery = 'brasil';\n    //this.searchVideos();\n    \n    this.route.paramMap.subscribe( (params: ParamMap) => {\n      this.searchQuery = params.get('query');\n      this.displayQuery = params.get('query');\n      this.searchVideos();\n    });\n    \n    this.route.data.subscribe( (result) => {\n      this.title = result.title;\n      console.log(\"title query: \"+this.title);\n    });\n  }\n  \n  searchVideos = () => {\n    this.SearchService.searchVideos(this.searchQuery).subscribe( (response) => {\n      this.searchResults = response;\n      console.log(this.searchResults);\n    }, (error) => {\n      alert(\"Error: \" + error.statusText);\n    })\n  }\n  \n  // Modal\n  openLoginForm = (item: Item) => {\n    let videoId = item.id.videoId;\n    let description = item.snippet.description;\n    let title = item.snippet.title;\n    let publishedAt = item.snippet.publishedAt;\n    this.dialog.open(VideoModalComponent, \n                    {width: '550px', \n                    height: '450px', \n                    data: {videoId: videoId,\n                           description: description,\n                           title: title,\n                           publishedAt: publishedAt}\n                    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { ListVideo } from '../interfaces/list-video';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ListVideoService {\n\n  //cachedValue: string;\n  baseUrl: string = 'https://www.googleapis.com/youtube/v3/playlistItems?part=id%2Csnippet%2CcontentDetails%2Cstatus&maxResults=12&playlistId=UUkJ8uPxz6UvoI6ihgQJZnww&fields=items(contentDetails%2FvideoId%2Cid%2Csnippet(publishedAt%2CchannelId%2CchannelTitle%2Cdescription%2CplaylistId%2Cthumbnails%2Fdefault%2Ctitle))&key=AIzaSyDRtPUX4hJm-97dpJ-aiazRQEFguNq0Q_U'\n\n  constructor(private http: HttpClient) { }\n  \n  listVideo : Function = () : Observable<ListVideo> => {\n    return this.http.get<ListVideo>(this.baseUrl);\n  }\n  \n}\n","import { Injectable } from '@angular/core';\nimport { Search } from '../interfaces/search';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SearchService {\n\n  query: string;\n  baseUrl: string= 'https://www.googleapis.com/youtube/v3/search?key=AIzaSyDRtPUX4hJm-97dpJ-aiazRQEFguNq0Q_U&channelId=UCkJ8uPxz6UvoI6ihgQJZnww&part=id%2Csnippet&maxResults=10&order=date&type=video&q=';\n\n  constructor(private http: HttpClient) { }\n  \n  searchVideos : Function = (query: string) : Observable<Search> => {\n    return this.http.get<Search>(this.baseUrl + query);\n  }\n}\n","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"end center\\\">\\n  <span class=\\\"flex-spacer\\\"></span>\\n  <button class=\\\"close-btn\\\" mat-button mat-icon-button mat-dialog-close>\\n    <mat-icon>close</mat-icon>\\n  </button>\\n</div>\\n<iframe id=\\\"ytplayer\\\" type=\\\"text/html\\\" width=\\\"480\\\" height=\\\"270\\\"\\n              [src]=\\\"srcYoutube\\\" frameborder=\\\"0\\\"></iframe>\\n<div fxLayout=\\\"row\\\">\\n<p fxFlex>{{data.title}}</p>\\n<mat-icon fxLayoutAlign=\\\"end center\\\">visibility</mat-icon>\\n<mat-icon fxLayoutAlign=\\\"end center\\\"\\n          matTooltipPosition=\\\"above\\\"\\n          matTooltip=\\\"{{data.publishedAt | date:'dd MMMM yyyy' }}\\\">access_time</mat-icon>\\n</div>              \\n<p>{{data.publishedAt}}</p>\\n<p>{{data.description}}</p>\\n\"","module.exports = \".close-btn {\\n  color: red;\\n  background-color: white; }\\n  .close-btn:hover {\\n    color: white;\\n    background-color: red; }\\n\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { DomSanitizer, SafeUrl } from '@angular/platform-browser';\n\nexport interface DialogData {\n  videoId: string,\n  description: string,\n  title: string,\n  publishedAt: string;\n}\n\n@Component({\n  selector: 'app-video-modal',\n  templateUrl: './video-modal.component.html',\n  styleUrls: ['./video-modal.component.scss']\n})\nexport class VideoModalComponent implements OnInit {\n\n  origin: string = 'https://ang4-projects-felipe007.c9users.io/featured';\n  srcYoutube: SafeUrl;\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: DialogData,\n              private sanitizer: DomSanitizer) { }\n\n  ngOnInit() {\n    \n    console.log(this.data);\n    \n    let preURL = 'https://www.youtube.com/embed/'+this.data.videoId\n                      +'?autoplay=1&origin='+this.origin;\n    this.srcYoutube = this.sanitizer.bypassSecurityTrustResourceUrl(preURL);\n    \n  }\n\n  \n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}